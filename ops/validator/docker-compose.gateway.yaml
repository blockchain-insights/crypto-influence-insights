version: '3.8'

services:
  neo4j:
    container_name: validator-neo4j-sn22
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${GRAPH_DB_USER:-neo4j}/${GRAPH_DB_PASSWORD:-KGdkfCHtVumyMN}
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_memory_heap_initial__size=2G
      - NEO4J_dbms_memory_heap_max__size=4G
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - ./ops/neo4j/plugins:/plugins  # Mount the directory with the required plugins
    restart: unless-stopped

  postgres:
    container_name: postgres-sn22
    image: postgres:16.3-alpine3.20
    ports:
      - "5432:5432"
    volumes:
      - "postgres-data-validator:/var/lib/postgresql/data"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-validator}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeit456$}
    restart: unless-stopped

  postgres_backup:
    image: postgres:16.3-alpine3.20
    container_name: postgres_backup-sn22
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-validator}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeit456$}
    volumes:
      - ./backup:/backup # Mounting backup directory on host
    entrypoint: [ "sh", "-c", "PGPASSWORD=$${POSTGRES_PASSWORD} pg_dump --dbname=postgresql://$${POSTGRES_USER}@postgres-sn22:5432/$${POSTGRES_DB} > /backup/backup_$$(date +\"%Y-%m-%d_%H-%M-%S\").sql" ]

  redis:
    image: redis:alpine
    container_name: redis-sn22
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres-data-validator:
    name: postgres-data-validator
  neo4j-data:
    name: neo4j-data
  neo4j-logs:
    name: neo4j-logs
